[tool.poetry]
name = "ai-agent"
version = "0.1.0"
description = "AI Agent implementation with modular architecture"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "ai_agent", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
openai = "^1.0.0"
pydantic = "^2.0.0"
pydantic-settings = "^2.0.0"
python-dotenv = "^1.0.0"
httpx = "^0.25.0"
structlog = "^23.0.0"
typer = "^0.9.0"
pyyaml = "^6.0"
psycopg2-binary = "^2.9.0"
requests = "^2.31.0"
boto3 = "^1.34.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
black = "^23.7.0"
flake8 = "^6.0.0"
mypy = "^1.5.0"
pre-commit = "^3.4.0"

[tool.poetry.scripts]
ai-agent = "ai_agent.main:cli_runner"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
pythonpath = ["src"]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*"] 